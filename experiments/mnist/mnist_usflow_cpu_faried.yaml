---
__object__: src.explib.base.ExperimentCollection
name: mnist_all_digits
experiments:
  - &digit_1
    __object__: src.explib.hyperopt.HyperoptExperiment
    name: mnist_all_digits
    scheduler:
      __object__: ray.tune.schedulers.ASHAScheduler
      max_t: 1000000
      grace_period: 1000000
      reduction_factor: 2
    num_hyperopt_samples:  1
    gpus_per_trial:  0
    cpus_per_trial: 50
    tuner_params:
      metric: val_loss
      mode: min
    device: cpu
    trial_config:
      epochs:  100000
      patience:  25
      logging:
        images: false
        image_shape: [28, 28]
      dataset:
        class:
          __class__: src.explib.datasets.MnistSplit
        params:
          dataloc: /home/mustafa.yalciner/mnist_dataset # /home/mustafa/Downloads/mnistdata
          space_to_depth_factor: 4
          device: cpu
          digit: 1
      batch_size:
        __eval__: tune.choice([32])
      optim_cfg:
        optimizer:
          __class__: torch.optim.Adam
        params:
          lr:
            __eval__: tune.loguniform(1e-6, 1e-4)
          weight_decay: 0.0
      model_cfg:
        type:
          __class__: src.usflows.flows.USFlow
        params:
          soft_training: false
          training_noise_prior:
            __object__: pyro.distributions.Uniform
            low:
              __eval__: 1e-20
            high: 0.01
          prior_scale: 1.0
          coupling_blocks:  1
          lu_transform: 1
          householder: 0
          conditioner_cls:
            __class__: src.usflows.networks.ConvNet2D
          conditioner_args:
            c_in: 16
            c_hidden: 32
            num_layers: 2
            padding: 1
            dilation: 1
            stride: 1
            kernel_size: 3
            rescale_hidden: 1
            normalize_layers: false
            gating: false
          in_dims: [16, 7, 7]
          affine_conjugation: true
          nonlinearity:
            __eval__: tune.choice([torch.nn.ReLU()])
          base_distribution:
            __object__: src.usflows.distributions.RadialDistribution
            device: cpu
            p: 1.0
            loc:
              __eval__: torch.zeros([16, 7, 7]).to("cpu")
            norm_distribution:
              __object__: src.usflows.distributions.LogNormal
              loc:
                __eval__: torch.ones([1]).to("cpu") * 4.5
              scale:
                __eval__: torch.ones([1]).to("cpu") * .35
  - &digit_2
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 2
  - &digit_3
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 3
  - &digit_4
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 4
  - &digit_5
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 5
  - &digit_6
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 6
  - &digit_7
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 7
  - &digit_8
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 8
  - &digit_9
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 9
  - &digit_0
    __overwrites__: *digit_1
    experiments:
      trial_config:
        dataset:
          params:
            digit: 0